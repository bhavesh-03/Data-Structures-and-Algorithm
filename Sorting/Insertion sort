
//Insertion Sort


// Sorted array --x-- unsorted array
// while condition check 
// while condition satisfies only when j is greater than equal to 1 

// Insertion sort is best for partially sorted array 


#include <bits/stdc++.h>
using namespace std;

int main()
{   int n ;
    cin>> n ;
    int arr[n] ;
    for(int i = 0 ; i < n ;i++){
        cin >> arr[i] ; 
    }
     
     for (int i = 1 ; i< n ; i++) { 
        int current = arr[i]  ;
        int j = i-1 ;
        while(arr[j]>current && j>=0){        //if satisfies this condition then :
            arr[j+1] = arr[j] ;  //this will down the array by 1 position each time 
            j-- ; 
        }
        arr[j+1] =current ;   
    }

    for (int i = 0 ; i<n; i++){
        cout << arr[i] <<" " ; 
        
    }
}      

/*
//insertion sort
//Bhavesh Mankar

#include <bits/stdc++.h>
using namespace std; 

void InsertionSort(int arr[],int n){
  int v, j;

  for(int i=0;i<n;i++){
    v=arr[i];
    j=i;
    while(arr[j-1]>v && j>=1){
      arr[j]=arr[j-1];
      j--;
    }
    arr[j] =v ;
  }
}

int main(){
   int n;
   cin >> n;
   int arr[n];
   for(int i=0;i<n;i++){
    cin >>arr[i];
  }
  InsertionSort(arr,n);
  for(int i=0;i<n;i++){
    cout<<arr[i]<<endl;
  }
  return 0;
}

*/


