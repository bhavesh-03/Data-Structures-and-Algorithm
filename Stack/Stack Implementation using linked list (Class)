//Bhavesh Mankar
//using Linked list (Class) 

#include<bits/stdc++.h>
using namespace std ;

class Node {
    public :
    int data ;
    Node *next ;
    Node(int data){
        this->data=data;
        next =NULL;

    }
};

class Stack{
    Node *head ;
    public:
    Stack(){
        head=NULL;
    }   

    int push(int data){
        Node *newNode= new Node(data);
        newNode->next =head ;
        head=newNode ;
    }
    int isEmpty(){
        return head==NULL;
    }
    int peek(){
        if(isEmpty()){
            cout<<"Stack is Empty "<<endl;
            return -1 ;
        }
        return head->data;
    }

    int pop(){
        Node *temp ;
        if(head =NULL){
            cout<<"Stack Underflow"<<endl;
            return -1 ;
        }
        int ele =head->data ;
        temp =head ;
        head=head->next ;
        free(temp) ;
        return ele;
    }
    
};

int main(){
    int n ;
    cin >> n;
    Stack st;
    for(int i=0;i<n;i++){
        int ele ;
        cin >>ele ;
        st.push(ele);
    }
    cout<<"Top of the stack "<<st.peek()<<endl;
    //cout<<"Size of the stack "<<sizefunction()<<endl;
    cout<<"Poping all the Element "<<endl;
    for(int i =0;i<n;i++){
        cout<<st.pop()<<endl;
    }
    // cout<<"Size of stack is "<<sizefunction()<<endl;
    return 0;
}
